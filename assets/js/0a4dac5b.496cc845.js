"use strict";(self.webpackChunkneon_docs=self.webpackChunkneon_docs||[]).push([[1587],{5601:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var n=i(4848),t=i(8453);i(4182),i(1801),i(3012),i(7227),i(9489);const s={sidebar_position:5,displayed_sidebar:"operatorsdk",title:"Finalizers",hide_title:!1,hide_table_of_contents:!1,description:"Finalizers are run after an object is deleted",keywords:["operator","sdk","crd","crds","custom resource","resource finalizer","finalizer"],last_update:{author:"NeonFORGE Team"}},o="Resource Finalizers",a={id:"operator-sdk/finalizers",title:"Finalizers",description:"Finalizers are run after an object is deleted",source:"@site/docs/operator-sdk/finalizers.mdx",sourceDirName:"operator-sdk",slug:"/operator-sdk/finalizers",permalink:"/docs/operator-sdk/finalizers",draft:!1,unlisted:!1,editUrl:"https://github.com/nforgeio/documentation/edit/master/docs/operator-sdk/finalizers.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,displayed_sidebar:"operatorsdk",title:"Finalizers",hide_title:!1,hide_table_of_contents:!1,description:"Finalizers are run after an object is deleted",keywords:["operator","sdk","crd","crds","custom resource","resource finalizer","finalizer"],last_update:{author:"NeonFORGE Team"}},sidebar:"operatorsdk",previous:{title:"Local Development",permalink:"/docs/operator-sdk/webhooks/local-dev"},next:{title:"RBAC",permalink:"/docs/operator-sdk/rbac"}},l={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Example",id:"example",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"resource-finalizers",children:"Resource Finalizers"}),"\n",(0,n.jsx)(r.h2,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsx)(r.p,{children:"Finalizers are namespaced keys that tell Kubernetes to wait until specific\r\nconditions are met before it fully deletes resources marked for deletion. When\r\nyou tell Kubernetes to delete an object that has finalizers specified for it,\r\nthe Kubernetes API will mark the object for deletion. The object will only be\r\ndeleted once the finalizers have run successfully."}),"\n",(0,n.jsx)(r.p,{children:"Finalizers can be used for garbage collection of resources. For example, you can\r\ndefine a finalizer to clean up any related resources before deleting the target\r\nresource."}),"\n",(0,n.jsx)(r.p,{children:"Finalizers can also be used to prevent accidental deletion of resources."}),"\n",(0,n.jsx)(r.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",children:"using Neon.Operator.Finalizers;\r\n\r\npublic class ExampleFinalizer : ResourceFinalizerBase<V1ExampleEntity>\r\n{\r\n    public override async Task FinalizeAsync(V1ExampleEntity resource)\r\n    {\r\n        // Run finalizer for given entity.\r\n    }\r\n}\n"})})]})}function u(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);