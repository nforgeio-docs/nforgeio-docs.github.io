"use strict";(self.webpackChunkneon_docs=self.webpackChunkneon_docs||[]).push([[321],{4137:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),l=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(r),f=n,y=d["".concat(c,".").concat(f)]||d[f]||p[f]||a;return r?o.createElement(y,i(i({ref:t},u),{},{components:r})):o.createElement(y,i({ref:t},u))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:n,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7163:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=r(7462),n=(r(7294),r(4137));const a={slug:"/operator-sdk",sidebar_position:1,displayed_sidebar:"operatorsdk",title:"Introduction",hide_title:!1,hide_table_of_contents:!1,description:"Introduction.",keywords:["introduction"],last_update:{author:"Marcus Bowyer"}},i="Introduction",s={unversionedId:"operator-sdk/intro",id:"operator-sdk/intro",title:"Introduction",description:"Introduction.",source:"@site/docs/operator-sdk/intro.mdx",sourceDirName:"operator-sdk",slug:"/operator-sdk",permalink:"/docs/operator-sdk",draft:!1,editUrl:"https://github.com/nforgeio/documentation/edit/master/docs/operator-sdk/intro.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/operator-sdk",sidebar_position:1,displayed_sidebar:"operatorsdk",title:"Introduction",hide_title:!1,hide_table_of_contents:!1,description:"Introduction.",keywords:["introduction"],last_update:{author:"Marcus Bowyer"}},sidebar:"operatorsdk",next:{title:"Getting Started",permalink:"/docs/operator-sdk/getting-started"}},c={},l=[],u={toc:l},d="wrapper";function p(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"introduction"},"Introduction"),(0,n.kt)("p",null,"NeonKUBE is a Full Stack Kubernetes Distribution which includes Kubernetes Core, opensource and custom add-ons, as well as a other tools like neon-desktop and neon-cli. Not only can NeonKUBE clusters be deployed directly on local servers or the cloud, you can also deploy full stack clusters on a laptop or workstation."),(0,n.kt)("p",null,"NeonKUBE requires a 4-core computer with at least 16 GiB RAM and about 75 GiB of free disk space when deploying a local cluster. The local cluster runs on a Hyper-V virtual machine with 8 GiB RAM and currently Kubernetes and NeonKUBE are consuming about 5.5 gig of memory, leaving 2.5 gig for user applications."),(0,n.kt)("p",null,"NeonKUBE clusters can be suspended at any time to quickly release this memory when the cluster isn\u2019t needed. This only takes a few seconds."))}p.isMDXComponent=!0}}]);