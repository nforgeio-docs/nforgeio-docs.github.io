"use strict";(self.webpackChunkneon_docs=self.webpackChunkneon_docs||[]).push([[8486],{9072:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var o=t(4848),i=t(8453);const s={sidebar_position:5,displayed_sidebar:"neonkube",title:"Networking",hide_title:!1,hide_table_of_contents:!1,description:"Networking in NeonKUBE",keywords:["networking"],last_update:{author:"Marcus Bowyer"}},r="Networking",a={id:"neonkube/networking",title:"Networking",description:"Networking in NeonKUBE",source:"@site/docs/neonkube/networking.mdx",sourceDirName:"neonkube",slug:"/neonkube/networking",permalink:"/docs/neonkube/networking",draft:!1,unlisted:!1,editUrl:"https://github.com/nforgeio/documentation/edit/master/docs/neonkube/networking.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,displayed_sidebar:"neonkube",title:"Networking",hide_title:!1,hide_table_of_contents:!1,description:"Networking in NeonKUBE",keywords:["networking"],last_update:{author:"Marcus Bowyer"}},sidebar:"neonkube",previous:{title:"Volumes and Storage",permalink:"/docs/neonkube/volumes-storage"},next:{title:"Security",permalink:"/docs/neonkube/security"}},c={},d=[{value:"Istio",id:"istio",level:2},{value:"Ingress",id:"ingress",level:3}];function u(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"networking",children:"Networking"}),"\n",(0,o.jsx)(n.h2,{id:"istio",children:"Istio"}),"\n",(0,o.jsx)(n.p,{children:"Istio is an open source service mesh that provides a uniform way to connect,\nsecure, control and observe services running on Kubernetes clusters. By using\nIstio on neonKUBE clusters, developers can benefit from advanced features such\nas traffic management, security policies, telemetry and observability."}),"\n",(0,o.jsx)(n.h3,{id:"ingress",children:"Ingress"}),"\n",(0,o.jsxs)(n.p,{children:["Ingress can be configured by creating ",(0,o.jsx)(n.code,{children:"Gateway"})," and ",(0,o.jsx)(n.code,{children:"VirtualService"})," resources.\nAll NeonKUBE clusters are configured with a secure ",(0,o.jsx)(n.code,{children:"Gateway"})," by default to allow\nusers to get up and running quickly without having to manage DNS and\ncertificates."]}),"\n",(0,o.jsxs)(n.p,{children:["Here is an example ",(0,o.jsx)(n.code,{children:"VirtualService"})," that uses the default ",(0,o.jsx)(n.code,{children:"neoncluster-gateway"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: example\n  namespace: default\nspec:\n  gateways:\n    - neon-ingress/neoncluster-gateway\n  hosts:\n    - example.CLUSTER_ID.neoncluster.io\n  http:\n    - match:\n        - uri:\n            prefix: /\n      route:\n        - destination:\n            host: example.default.svc.cluster.local\n            port:\n              number: 80\n"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(6540);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);