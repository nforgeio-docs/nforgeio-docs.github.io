"use strict";(self.webpackChunkneon_docs=self.webpackChunkneon_docs||[]).push([[339],{3905:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>k});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var u=n.createContext({}),c=function(e){var t=n.useContext(u),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},d=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),l=c(o),b=r,k=l["".concat(u,".").concat(b)]||l[b]||p[b]||a;return o?n.createElement(k,i(i({ref:t},d),{},{components:o})):n.createElement(k,i({ref:t},d))}));function k(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=b;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[l]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=o[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}b.displayName="MDXCreateElement"},6557:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=o(7462),r=(o(7294),o(3905));const a={sidebar_position:1,displayed_sidebar:"neonkube",title:"Mutating Webhooks",hide_title:!1,hide_table_of_contents:!1,description:"Mutating Webhooks can modify resources when created/updated.",keywords:["neonkube kubernetes operator sdk resource mutating webhooks"],last_update:{author:"Marcus Bowyer"}},i="Mutating Webhooks",s={unversionedId:"neonkube/operator-sdk/webhooks/mutating-webhooks",id:"neonkube/operator-sdk/webhooks/mutating-webhooks",title:"Mutating Webhooks",description:"Mutating Webhooks can modify resources when created/updated.",source:"@site/docs/neonkube/operator-sdk/webhooks/mutating-webhooks.mdx",sourceDirName:"neonkube/operator-sdk/webhooks",slug:"/neonkube/operator-sdk/webhooks/mutating-webhooks",permalink:"/docs/neonkube/operator-sdk/webhooks/mutating-webhooks",draft:!1,editUrl:"https://github.com/nforgeio/documentation/edit/master/docs/neonkube/operator-sdk/webhooks/mutating-webhooks.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,displayed_sidebar:"neonkube",title:"Mutating Webhooks",hide_title:!1,hide_table_of_contents:!1,description:"Mutating Webhooks can modify resources when created/updated.",keywords:["neonkube kubernetes operator sdk resource mutating webhooks"],last_update:{author:"Marcus Bowyer"}},sidebar:"neonkube",previous:{title:"Webhooks",permalink:"/docs/category/webhooks"},next:{title:"Validating Webhooks",permalink:"/docs/neonkube/operator-sdk/webhooks/validating-webhooks"}},u={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Example Mutating Webhook",id:"example-mutating-webhook",level:2}],d={toc:c},l="wrapper";function p(e){let{components:t,...o}=e;return(0,r.kt)(l,(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mutating-webhooks"},"Mutating Webhooks"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Mutating webhooks are most frequently used for setting default values.\nThey can modify objects by creating a patch that will be sent back in the admission response."),(0,r.kt)("mermaid",{value:"flowchart TD\n    A[User] -- kubectl apply resource.yaml --\x3e K[Kubernetes API] --\x3e M{MutatingWebhook} -- update state --\x3e K"}),(0,r.kt)("h2",{id:"example-mutating-webhook"},"Example Mutating Webhook"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'[Webhook(\n    name: "pod-policy.neonkube.io",\n    admissionReviewVersions: "v1",\n    failurePolicy: "Ignore")]\n[WebhookRule(\n    apiGroups: V1Pod.KubeGroup,\n    apiVersions: V1Pod.KubeApiVersion, \n    operations: AdmissionOperations.Create | AdmissionOperations.Update, \n    resources: V1Pod.KubePluralName,\n    scope: "*")]\npublic class PodWebhook : IMutatingWebhook<V1Pod>\n{\n    private bool modified = false;\n\n    public async Task<MutationResult> CreateAsync(V1Pod entity, bool dryRun)\n    {\n        if (modified)\n        {\n            return await Task.FromResult(MutationResult.Modified(entity));\n        }\n\n        return await Task.FromResult(MutationResult.NoChanges());\n    }\n\n    public async Task<MutationResult> UpdateAsync(V1Pod entity, V1Pod oldEntity, bool dryRun)\n    {\n        if (modified)\n        {\n            return await Task.FromResult(MutationResult.Modified(entity));\n        }\n\n        return await Task.FromResult(MutationResult.NoChanges());\n    }\n}\n')))}p.isMDXComponent=!0}}]);